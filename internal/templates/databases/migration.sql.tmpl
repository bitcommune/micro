-- Migration: Create {{.Model.Name}} table
-- Generated at: {{ now }}

{{if eq .DBType "postgres"}}
CREATE TABLE {{.Model.Name | ToSnakeCase}}s (
    id SERIAL PRIMARY KEY,
    {{range .Model.Fields}}
    {{.Name | ToSnakeCase}} {{if eq .Type "string"}}VARCHAR(255){{else if eq .Type "uint"}}INTEGER{{else if eq .Type "int"}}INTEGER{{else if eq .Type "bool"}}BOOLEAN{{else}}TEXT{{end}},{{end}}
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP WITH TIME ZONE
);

{{else if eq .DBType "mysql"}}
CREATE TABLE {{.Model.Name | ToSnakeCase}}s (
    id INT AUTO_INCREMENT PRIMARY KEY,
    {{range .Model.Fields}}
    {{.Name | ToSnakeCase}} {{if eq .Type "string"}}VARCHAR(255){{else if eq .Type "uint"}}INTEGER{{else if eq .Type "int"}}INTEGER{{else if eq .Type "bool"}}BOOLEAN{{else}}TEXT{{end}},{{end}}
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP NULL
);

{{else if eq .DBType "sqlite"}}
CREATE TABLE {{.Model.Name | ToSnakeCase}}s (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    {{range .Model.Fields}}
    {{.Name | ToSnakeCase}} {{if eq .Type "string"}}TEXT{{else if eq .Type "uint"}}INTEGER{{else if eq .Type "int"}}INTEGER{{else if eq .Type "bool"}}INTEGER{{else}}TEXT{{end}},{{end}}
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    deleted_at DATETIME
);
{{end}}

-- Create indexes
{{range .Model.Fields}}
{{if contains .GormTag "index"}}
CREATE INDEX idx_{{$.Model.Name | ToSnakeCase}}_{{.Name | ToSnakeCase}} ON {{$.Model.Name | ToSnakeCase}}s({{.Name | ToSnakeCase}});
{{end}}
{{if contains .GormTag "uniqueIndex"}}
CREATE UNIQUE INDEX idx_{{$.Model.Name | ToSnakeCase}}_{{.Name | ToSnakeCase}}_unique ON {{$.Model.Name | ToSnakeCase}}s({{.Name | ToSnakeCase}});
{{end}}
{{end}}