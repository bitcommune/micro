package service

import (
	"context"

	"{{.PackageName}}"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
)

// {{.ServiceName}} implements the gRPC service
type {{.ServiceName}} struct {
	pb.Unimplemented{{.ServiceName}}Server
	// Add any dependencies here (e.g., database repository)
}

// New{{.ServiceName}} creates a new service instance
func New{{.ServiceName}}() *{{.ServiceName}} {
	return &{{.ServiceName}}{}
}

{{range .RPCs}}
// {{.Name}} implements the {{.Name}} RPC method
func (s *{{$.ServiceName}}) {{.Name}}(ctx context.Context, req *pb.{{.Request}}) (*pb.{{.Response}}, error) {
	// TODO: Implement your business logic here

	// Example implementation:
	// result, err := s.repository.GetData(ctx, req.Parameter)
	// if err != nil {
	//     return nil, status.Errorf(codes.Internal, "failed to get data: %v", err)
	// }

	return &pb.{{.Response}}{
		// Populate response fields
	}, nil
}
{{end}}